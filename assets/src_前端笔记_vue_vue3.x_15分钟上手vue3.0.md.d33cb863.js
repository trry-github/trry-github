import{_ as s,c as n,o as a,Q as e}from"./chunks/framework.30f3a391.js";const l=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端笔记/vue/vue3.x/15分钟上手vue3.0.md","filePath":"src/前端笔记/vue/vue3.x/15分钟上手vue3.0.md","lastUpdated":1683717698000}'),p={name:"src/前端笔记/vue/vue3.x/15分钟上手vue3.0.md"},c=[e('<h2 id="_15分钟上手vue3-0" tabindex="-1">15分钟上手vue3.0 <a class="header-anchor" href="#_15分钟上手vue3-0" aria-label="Permalink to &quot;15分钟上手vue3.0&quot;">​</a></h2><p><code>vue 3.0 </code>还没有正式发布，但是<code>Alpha</code>版本已经发布了。</p><p>虽然官方还不推荐在生产环境中直接使用<code>Vue 3</code>,但是提前学习总归是有好处的。</p><blockquote><p>嘴上喊着老子学不动了，双手还是很诚实的打开了```Vue 3 文档</p></blockquote><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><p><code>Vue</code>官方很贴心的提供了一个github仓库，让我们能快速体验<code>Vue 3</code>的新特性：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git clone https://github.com/vuejs/vue-next-webpack-preview.git vue3-start</span></span>\n<span class="line"><span style="color:#e1e4e8;">cd vue3-start</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git clone https://github.com/vuejs/vue-next-webpack-preview.git vue3-start</span></span>\n<span class="line"><span style="color:#24292e;">cd vue3-start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npm install or yarn install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npm install or yarn install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>开发环境准备就绪后，启动命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npm run dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npm run dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在浏览器中打开<code>http://127.0.0.1:8080</code>,您可以看到一个简单的计数器页面：</p><blockquote><p>打开 package.json,当前使用的 vue 版本是：3.0.0-bata.2</p></blockquote><h2 id="vue-3-新特性" tabindex="-1">Vue 3 新特性 <a class="header-anchor" href="#vue-3-新特性" aria-label="Permalink to &quot;Vue 3 新特性&quot;">​</a></h2><p><code>Vue 3</code> 的设计目标是更快，更小，并更好的支持<code>TypeScript</code>.</p><p>一些新特性的包括：</p><blockquote><p>1、Composition API 2、Multiple root elements 3、Suspense 4、Multiple V-models 5、Reactivity 6、Teleport 7、Transition 8、Remove Filter 9、App configuration</p></blockquote><h2 id="_1、composition-api" tabindex="-1">1、Composition API <a class="header-anchor" href="#_1、composition-api" aria-label="Permalink to &quot;1、Composition API&quot;">​</a></h2><p>Vue管方发布了<code>Composition API</code> 的官方插件，使广大用户可以在 <code>Vue2.x</code>中享<code>Function Base</code>带来的新体验。</p><p>而在 <code>vue 3</code> 中无需单独安装插件，开箱即用。</p><p>打开<code>App.vue</code>,你会开到<code>setup()</code>方法：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">    &lt;img src=&#39;./logo.png&#39;&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">    &lt;h1&gt;Hello Vue 3!&lt;/h1&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">    &lt;button @click=&quot;inc&quot;&gt;Clicked {{ count }} times.&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;/template&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;"></span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">import { ref } from &#39;vue&#39;</span></span>\n<span class="line"><span style="color:#e1e4e8;"></span></span>\n<span class="line"><span style="color:#e1e4e8;">export default {</span></span>\n<span class="line"><span style="color:#e1e4e8;">    setup() {</span></span>\n<span class="line"><span style="color:#e1e4e8;">        const count = ref(0)</span></span>\n<span class="line"><span style="color:#e1e4e8;">        const inc = () =&gt; {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            count.value++</span></span>\n<span class="line"><span style="color:#e1e4e8;">        }</span></span>\n<span class="line"><span style="color:#e1e4e8;">        </span></span>\n<span class="line"><span style="color:#e1e4e8;">        return {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            count,</span></span>\n<span class="line"><span style="color:#e1e4e8;">            inc</span></span>\n<span class="line"><span style="color:#e1e4e8;">        }</span></span>\n<span class="line"><span style="color:#e1e4e8;">    }</span></span>\n<span class="line"><span style="color:#e1e4e8;">}</span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;/script&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;"></span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;style scoped&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">img {</span></span>\n<span class="line"><span style="color:#e1e4e8;">    width: 200px;</span></span>\n<span class="line"><span style="color:#e1e4e8;">}</span></span>\n<span class="line"><span style="color:#e1e4e8;">h1 {</span></span>\n<span class="line"><span style="color:#e1e4e8;">    font-family: Arial, Helvetica, sans-serif;</span></span>\n<span class="line"><span style="color:#e1e4e8;">}</span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;/style&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#24292e;">    &lt;img src=&#39;./logo.png&#39;&gt;</span></span>\n<span class="line"><span style="color:#24292e;">    &lt;h1&gt;Hello Vue 3!&lt;/h1&gt;</span></span>\n<span class="line"><span style="color:#24292e;">    &lt;button @click=&quot;inc&quot;&gt;Clicked {{ count }} times.&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#24292e;">&lt;/template&gt;</span></span>\n<span class="line"><span style="color:#24292e;"></span></span>\n<span class="line"><span style="color:#24292e;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#24292e;">import { ref } from &#39;vue&#39;</span></span>\n<span class="line"><span style="color:#24292e;"></span></span>\n<span class="line"><span style="color:#24292e;">export default {</span></span>\n<span class="line"><span style="color:#24292e;">    setup() {</span></span>\n<span class="line"><span style="color:#24292e;">        const count = ref(0)</span></span>\n<span class="line"><span style="color:#24292e;">        const inc = () =&gt; {</span></span>\n<span class="line"><span style="color:#24292e;">            count.value++</span></span>\n<span class="line"><span style="color:#24292e;">        }</span></span>\n<span class="line"><span style="color:#24292e;">        </span></span>\n<span class="line"><span style="color:#24292e;">        return {</span></span>\n<span class="line"><span style="color:#24292e;">            count,</span></span>\n<span class="line"><span style="color:#24292e;">            inc</span></span>\n<span class="line"><span style="color:#24292e;">        }</span></span>\n<span class="line"><span style="color:#24292e;">    }</span></span>\n<span class="line"><span style="color:#24292e;">}</span></span>\n<span class="line"><span style="color:#24292e;">&lt;/script&gt;</span></span>\n<span class="line"><span style="color:#24292e;"></span></span>\n<span class="line"><span style="color:#24292e;">&lt;style scoped&gt;</span></span>\n<span class="line"><span style="color:#24292e;">img {</span></span>\n<span class="line"><span style="color:#24292e;">    width: 200px;</span></span>\n<span class="line"><span style="color:#24292e;">}</span></span>\n<span class="line"><span style="color:#24292e;">h1 {</span></span>\n<span class="line"><span style="color:#24292e;">    font-family: Arial, Helvetica, sans-serif;</span></span>\n<span class="line"><span style="color:#24292e;">}</span></span>\n<span class="line"><span style="color:#24292e;">&lt;/style&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><code>Composition API</code> 主要提供量大好处：</p><ol><li>清晰的代码结构</li><li>消除重复逻辑</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">    &lt;div class=&quot;counter&quot;&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &lt;p&gt;count: {{ count }}&lt;/p&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &lt;p&gt;NewVal (count + 2): {{ countDouble }}&lt;/p&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &lt;button @click=&quot;inc&quot;&gt;Increment&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &lt;button @click=&quot;dec&quot;&gt;Decrement&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &lt;p&gt; Message: {{ msg }}&lt;/p&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &lt;button @click=&quot;changeMessage()&quot;&gt;Change Message&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">    &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;/template&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;"></span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#e1e4e8;">import { ref, computed, watch } from &#39;vue&#39;</span></span>\n<span class="line"><span style="color:#e1e4e8;">export default {</span></span>\n<span class="line"><span style="color:#e1e4e8;">    setup() {</span></span>\n<span class="line"><span style="color:#e1e4e8;">        /*---------------------------*/</span></span>\n<span class="line"><span style="color:#e1e4e8;">        let count = ref(0)</span></span>\n<span class="line"><span style="color:#e1e4e8;">        const countDouble = computed(() =&gt; count.value * 2)</span></span>\n<span class="line"><span style="color:#e1e4e8;">        watch(count, newVal =&gt; {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            console.log(&#39;count chaged&#39;, newVal)</span></span>\n<span class="line"><span style="color:#e1e4e8;">        })</span></span>\n<span class="line"><span style="color:#e1e4e8;">        const inc = () =&gt; {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            count.value += 1</span></span>\n<span class="line"><span style="color:#e1e4e8;">        }</span></span>\n<span class="line"><span style="color:#e1e4e8;">        const dec = () =&gt; {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            if (count.value !== 0) {</span></span>\n<span class="line"><span style="color:#e1e4e8;">                count.value -= 1</span></span>\n<span class="line"><span style="color:#e1e4e8;">            }</span></span>\n<span class="line"><span style="color:#e1e4e8;">        }</span></span>\n<span class="line"><span style="color:#e1e4e8;">        /*---------------------------------*/</span></span>\n<span class="line"><span style="color:#e1e4e8;">        let msg = ref(&#39;some text&#39;)</span></span>\n<span class="line"><span style="color:#e1e4e8;">        watch(msg, newVal =&gt; {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            console.log(&#39;msg changed&#39;, newVal)</span></span>\n<span class="line"><span style="color:#e1e4e8;">        })</span></span>\n<span class="line"><span style="color:#e1e4e8;">        const changeMessage = () =&gt; {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            msg.value = &#39;new Message&#39;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        }</span></span>\n<span class="line"><span style="color:#e1e4e8;">        /*------------------------------*/</span></span>\n<span class="line"><span style="color:#e1e4e8;">        return {</span></span>\n<span class="line"><span style="color:#e1e4e8;">            count,</span></span>\n<span class="line"><span style="color:#e1e4e8;">            inc,</span></span>\n<span class="line"><span style="color:#e1e4e8;">            dec,</span></span>\n<span class="line"><span style="color:#e1e4e8;">            countDouble,</span></span>\n<span class="line"><span style="color:#e1e4e8;">            msg,</span></span>\n<span class="line"><span style="color:#e1e4e8;">            changeMessage</span></span>\n<span class="line"><span style="color:#e1e4e8;">        }</span></span>\n<span class="line"><span style="color:#e1e4e8;">    }</span></span>\n<span class="line"><span style="color:#e1e4e8;">}</span></span>\n<span class="line"><span style="color:#e1e4e8;">&lt;/script&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#24292e;">    &lt;div class=&quot;counter&quot;&gt;</span></span>\n<span class="line"><span style="color:#24292e;">        &lt;p&gt;count: {{ count }}&lt;/p&gt;</span></span>\n<span class="line"><span style="color:#24292e;">        &lt;p&gt;NewVal (count + 2): {{ countDouble }}&lt;/p&gt;</span></span>\n<span class="line"><span style="color:#24292e;">        &lt;button @click=&quot;inc&quot;&gt;Increment&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#24292e;">        &lt;button @click=&quot;dec&quot;&gt;Decrement&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#24292e;">        &lt;p&gt; Message: {{ msg }}&lt;/p&gt;</span></span>\n<span class="line"><span style="color:#24292e;">        &lt;button @click=&quot;changeMessage()&quot;&gt;Change Message&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#24292e;">    &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#24292e;">&lt;/template&gt;</span></span>\n<span class="line"><span style="color:#24292e;"></span></span>\n<span class="line"><span style="color:#24292e;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#24292e;">import { ref, computed, watch } from &#39;vue&#39;</span></span>\n<span class="line"><span style="color:#24292e;">export default {</span></span>\n<span class="line"><span style="color:#24292e;">    setup() {</span></span>\n<span class="line"><span style="color:#24292e;">        /*---------------------------*/</span></span>\n<span class="line"><span style="color:#24292e;">        let count = ref(0)</span></span>\n<span class="line"><span style="color:#24292e;">        const countDouble = computed(() =&gt; count.value * 2)</span></span>\n<span class="line"><span style="color:#24292e;">        watch(count, newVal =&gt; {</span></span>\n<span class="line"><span style="color:#24292e;">            console.log(&#39;count chaged&#39;, newVal)</span></span>\n<span class="line"><span style="color:#24292e;">        })</span></span>\n<span class="line"><span style="color:#24292e;">        const inc = () =&gt; {</span></span>\n<span class="line"><span style="color:#24292e;">            count.value += 1</span></span>\n<span class="line"><span style="color:#24292e;">        }</span></span>\n<span class="line"><span style="color:#24292e;">        const dec = () =&gt; {</span></span>\n<span class="line"><span style="color:#24292e;">            if (count.value !== 0) {</span></span>\n<span class="line"><span style="color:#24292e;">                count.value -= 1</span></span>\n<span class="line"><span style="color:#24292e;">            }</span></span>\n<span class="line"><span style="color:#24292e;">        }</span></span>\n<span class="line"><span style="color:#24292e;">        /*---------------------------------*/</span></span>\n<span class="line"><span style="color:#24292e;">        let msg = ref(&#39;some text&#39;)</span></span>\n<span class="line"><span style="color:#24292e;">        watch(msg, newVal =&gt; {</span></span>\n<span class="line"><span style="color:#24292e;">            console.log(&#39;msg changed&#39;, newVal)</span></span>\n<span class="line"><span style="color:#24292e;">        })</span></span>\n<span class="line"><span style="color:#24292e;">        const changeMessage = () =&gt; {</span></span>\n<span class="line"><span style="color:#24292e;">            msg.value = &#39;new Message&#39;</span></span>\n<span class="line"><span style="color:#24292e;">        }</span></span>\n<span class="line"><span style="color:#24292e;">        /*------------------------------*/</span></span>\n<span class="line"><span style="color:#24292e;">        return {</span></span>\n<span class="line"><span style="color:#24292e;">            count,</span></span>\n<span class="line"><span style="color:#24292e;">            inc,</span></span>\n<span class="line"><span style="color:#24292e;">            dec,</span></span>\n<span class="line"><span style="color:#24292e;">            countDouble,</span></span>\n<span class="line"><span style="color:#24292e;">            msg,</span></span>\n<span class="line"><span style="color:#24292e;">            changeMessage</span></span>\n<span class="line"><span style="color:#24292e;">        }</span></span>\n<span class="line"><span style="color:#24292e;">    }</span></span>\n<span class="line"><span style="color:#24292e;">}</span></span>\n<span class="line"><span style="color:#24292e;">&lt;/script&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div>',24)];const o=s(p,[["render",function(s,e,l,p,o,t){return a(),n("div",null,c)}]]);export{l as __pageData,o as default};
