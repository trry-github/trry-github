import{_ as s,c as n,o as a,Q as e}from"./chunks/framework.30f3a391.js";const p=JSON.parse('{"title":"Vue项目自动转换 px 为 rem，高保真还原设计图","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端笔记/vue/vue中完美使用rem完成移动端项目.md","filePath":"src/前端笔记/vue/vue中完美使用rem完成移动端项目.md","lastUpdated":1683717698000}'),l={name:"src/前端笔记/vue/vue中完美使用rem完成移动端项目.md"},o=[e('<h1 id="vue项目自动转换-px-为-rem-高保真还原设计图" tabindex="-1">Vue项目自动转换 px 为 rem，高保真还原设计图 <a class="header-anchor" href="#vue项目自动转换-px-为-rem-高保真还原设计图" aria-label="Permalink to &quot;Vue项目自动转换 px 为 rem，高保真还原设计图&quot;">​</a></h1><p>前端开发中还原设计图的重要性毋庸置疑，目前来说应用最多的应该也还是使用<strong>rem</strong>。然而很多人依然还是处于刀耕火种的时代，要么自己去计算<code>rem</code>值，要么依靠编辑器安装插件转换。</p><p>而本文的目标就是通过一系列的配置后，在开发中可以直接使用设计图的尺寸开发，项目为我们自动编译，转换成<code>rem</code>。</p><h2 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h2><ul><li>vue-cli：使用脚手架工具创建项目。</li><li>postcss-pxtorem：转换px为rem的插件。</li></ul><h2 id="自动设置根节点html的font-size" tabindex="-1">自动设置根节点<code>html</code>的<code>font-size</code> <a class="header-anchor" href="#自动设置根节点html的font-size" aria-label="Permalink to &quot;自动设置根节点`html`的`font-size`&quot;">​</a></h2><p>因为<code>rem</code>单位是相对于根节点的字体大小的，所以通过设置根节点的字体大小可以动态的改变rem的大小。</p><p>原理网上有很多文章分享，这里不具体解释。</p><h3 id="_1、创建rem-js文件" tabindex="-1">1、创建<code>rem.js</code>文件 <a class="header-anchor" href="#_1、创建rem-js文件" aria-label="Permalink to &quot;1、创建`rem.js`文件&quot;">​</a></h3><p>很多人写这种小工具文件会习惯性的加上闭包，这个其实是没有必要的。ES6中每个文件都是单独的一个模块。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 基准大小</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">baseSize</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32</span></span>\n<span class="line"><span style="color:#6A737D;">// 设置 rem 函数</span></span>\n<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setRem</span><span style="color:#E1E4E8;"> () {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 当前页面宽度相对于 750 宽的缩放比例，可根据自己需要修改。</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scale</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.documentElement.clientWidth </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">750</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 设置页面根节点字体大小</span></span>\n<span class="line"><span style="color:#E1E4E8;">  document.documentElement.style.fontSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (baseSize </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(scale, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;px&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#6A737D;">// 初始化</span></span>\n<span class="line"><span style="color:#B392F0;">setRem</span><span style="color:#E1E4E8;">()</span></span>\n<span class="line"><span style="color:#6A737D;">// 改变窗口大小时重新设置 rem</span></span>\n<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">onresize</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">setRem</span><span style="color:#E1E4E8;">()</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 基准大小</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">baseSize</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32</span></span>\n<span class="line"><span style="color:#6A737D;">// 设置 rem 函数</span></span>\n<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setRem</span><span style="color:#24292E;"> () {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 当前页面宽度相对于 750 宽的缩放比例，可根据自己需要修改。</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scale</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.documentElement.clientWidth </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">750</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 设置页面根节点字体大小</span></span>\n<span class="line"><span style="color:#24292E;">  document.documentElement.style.fontSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (baseSize </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(scale, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;px&#39;</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span>\n<span class="line"><span style="color:#6A737D;">// 初始化</span></span>\n<span class="line"><span style="color:#6F42C1;">setRem</span><span style="color:#24292E;">()</span></span>\n<span class="line"><span style="color:#6A737D;">// 改变窗口大小时重新设置 rem</span></span>\n<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">onresize</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">setRem</span><span style="color:#24292E;">()</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_2、在main-js中引入rem-js" tabindex="-1">2、在<code>main.js</code>中引入<code>rem.js</code> <a class="header-anchor" href="#_2、在main-js中引入rem-js" aria-label="Permalink to &quot;2、在`main.js`中引入`rem.js`&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./utils/rem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./utils/rem&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>引入文件后，查看页面的html节点，是否有被自动添加 <code>font-size</code>。</p><p><strong>注意：完成到这一步，也就是实现了rem布局，实际开发的时候，还是需要我们去计算对应的rem值去开发。</strong></p><p><strong>下一步我们就配置一下webpack，自动转换px为对应的rem值。</strong></p><h2 id="配置-postcss-pxtorem-自动转换px为rem" tabindex="-1">配置 <code>postcss-pxtorem</code> 自动转换px为rem <a class="header-anchor" href="#配置-postcss-pxtorem-自动转换px为rem" aria-label="Permalink to &quot;配置 `postcss-pxtorem` 自动转换px为rem&quot;">​</a></h2><p><strong>1、安装 <code>postcss-pxtorem</code></strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install postcss</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">pxtorem </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install postcss</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">pxtorem </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>2、修改根目录 <code>package.json</code> 文件</strong></p><p>新增pxtorem的设置</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&quot;postcss&quot;: {</span></span>\n<span class="line"><span style="color:#e1e4e8;">    &quot;plugins&quot;: {</span></span>\n<span class="line"><span style="color:#e1e4e8;">      &quot;autoprefixer&quot;: {},</span></span>\n<span class="line"><span style="color:#e1e4e8;">      &quot;postcss-pxtorem&quot;: {</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &quot;rootValue&quot;: 32,</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &quot;propList&quot;: [</span></span>\n<span class="line"><span style="color:#e1e4e8;">          &quot;*&quot;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        ],</span></span>\n<span class="line"><span style="color:#e1e4e8;">        &quot;selectorBlackList&quot;: [</span></span>\n<span class="line"><span style="color:#e1e4e8;">          &quot;el-&quot;</span></span>\n<span class="line"><span style="color:#e1e4e8;">        ]</span></span>\n<span class="line"><span style="color:#e1e4e8;">      }</span></span>\n<span class="line"><span style="color:#e1e4e8;">    }</span></span>\n<span class="line"><span style="color:#e1e4e8;">  },</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&quot;postcss&quot;: {</span></span>\n<span class="line"><span style="color:#24292e;">    &quot;plugins&quot;: {</span></span>\n<span class="line"><span style="color:#24292e;">      &quot;autoprefixer&quot;: {},</span></span>\n<span class="line"><span style="color:#24292e;">      &quot;postcss-pxtorem&quot;: {</span></span>\n<span class="line"><span style="color:#24292e;">        &quot;rootValue&quot;: 32,</span></span>\n<span class="line"><span style="color:#24292e;">        &quot;propList&quot;: [</span></span>\n<span class="line"><span style="color:#24292e;">          &quot;*&quot;</span></span>\n<span class="line"><span style="color:#24292e;">        ],</span></span>\n<span class="line"><span style="color:#24292e;">        &quot;selectorBlackList&quot;: [</span></span>\n<span class="line"><span style="color:#24292e;">          &quot;el-&quot;</span></span>\n<span class="line"><span style="color:#24292e;">        ]</span></span>\n<span class="line"><span style="color:#24292e;">      }</span></span>\n<span class="line"><span style="color:#24292e;">    }</span></span>\n<span class="line"><span style="color:#24292e;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>按照上述配置项目后，即可在开发中直接使用 <code>px</code> 单位开发。</p><p>例如设计给出的设计图是 <strong>750 * 1136</strong>，那么可以直接在页面中写</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">body {</span></span>\n<span class="line"><span style="color:#e1e4e8;"> width: 750px;</span></span>\n<span class="line"><span style="color:#e1e4e8;"> height: 1136px;</span></span>\n<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">body {</span></span>\n<span class="line"><span style="color:#24292e;"> width: 750px;</span></span>\n<span class="line"><span style="color:#24292e;"> height: 1136px;</span></span>\n<span class="line"><span style="color:#24292e;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>将被转换为</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">body {</span></span>\n<span class="line"><span style="color:#e1e4e8;"> widht: 23.4375rem;</span></span>\n<span class="line"><span style="color:#e1e4e8;"> height: 35.5rem;</span></span>\n<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">body {</span></span>\n<span class="line"><span style="color:#24292e;"> widht: 23.4375rem;</span></span>\n<span class="line"><span style="color:#24292e;"> height: 35.5rem;</span></span>\n<span class="line"><span style="color:#24292e;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>注意：此方法支持<code>import</code> 和 <code>.vue</code>单文件中<code>style</code>。暂不支持<code>style</code>中使用<code>@import url();</code></strong></p><p>---End---</p>',29)];const c=s(l,[["render",function(s,e,p,l,c,r){return a(),n("div",null,o)}]]);export{p as __pageData,c as default};
